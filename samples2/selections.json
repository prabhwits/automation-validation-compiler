{
	"_TESTS_": {
		"search": [
			{
				"_NAME_": "first_search_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 100
			},
			{
				"_NAME_": "second_search_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 101
			},
			{
				"_NAME_": "first_onsearch_request",
				"mockType": "$._EXTERNAL.mock_type",
				"city_code": "$._EXTERNAL.city_code",
				"bap_uri": "$._EXTERNAL.bap_uri",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present)",
				"_SUCCESS_CODE_": 102
			},
			{
				"_NAME_": "second_onsearch_request",
				"mockType": "$._EXTERNAL.mock_type",
				"start_code": "$._EXTERNAL.start_code",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType)  && (start_code are present)",
				"_SUCCESS_CODE_": 103
			},
			{
				"_NAME_": "select_request",
				"lastAction": "$._EXTERNAL.last_action",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 104
			},
			{
				"_NAME_": "onselect_request",
				"mockType": "$._EXTERNAL.mock_type",
				"selected_item_ids": "$._EXTERNAL.selected_item_ids[*]",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType)  && (selected_item_ids are present)",
				"_SUCCESS_CODE_": 105
			},
			{
				"_NAME_": "init_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 106
			},
			{
				"_NAME_": "oninit_request",
				"mockType": "$._EXTERNAL.mock_type",
				"payments": "$._EXTERNAL.payments[*].collected_by",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType)  && (payments are present)",
				"_SUCCESS_CODE_": 107
			},
			{
				"_NAME_": "confirm_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 108
			},
			{
				"_NAME_": "onconfirm_request",
				"mockType": "$._EXTERNAL.mock_type",
				"updated_payments": "$._EXTERNAL.updated_payments[*].id",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType)  && (updated_payments are present)",
				"_SUCCESS_CODE_": 109
			},
			{
				"_NAME_": "onconfirm_delayed_request",
				"mockType": "$._EXTERNAL.mock_type",
				"updated_payments": "$._EXTERNAL.updated_payments[*].id",
				"forType": ["BPP"],
				"_RETURN_": "(mockType equal to forType)  && (updated_payments are present)",
				"_SUCCESS_CODE_": 110
			},
			{
				"_NAME_": "status_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 111
			},
			{
				"_NAME_": "onstatus_active_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType)  && (order_id are present)",
				"_SUCCESS_CODE_": 112
			},
			{
				"_NAME_": "onstatus_complete_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType)  && (order_id are present)",
				"_SUCCESS_CODE_": 113
			},
			{
				"_NAME_": "onstatus_complete_unsolicited_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 114
			},
			{
				"_NAME_": "cancel_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType) ",
				"_SUCCESS_CODE_": 115
			},
			{
				"_NAME_": "cancel_soft_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 116
			},
			{
				"_NAME_": "cancel_hard_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BAP"],
				"_RETURN_": "(mockType equal to forType)",
				"_SUCCESS_CODE_": 117
			},
			{
				"_NAME_": "oncancel_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 118
			},
			{
				"_NAME_": "oncancel_soft_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 119
			},
			{
				"_NAME_": "oncancel_hard_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 120
			},
			{
				"_NAME_": "oncancel_init_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 121
			},
			{
				"_NAME_": "onupdate_request",
				"mockType": "$._EXTERNAL.mock_type",
				"forType": ["BPP"],
				"order_id": "$._EXTERNAL.order_id",
				"_RETURN_": "(mockType equal to forType) && (order_id are present)",
				"_SUCCESS_CODE_": 122
			}
		]
	},
	"_SESSION_DATA_": {
		"search": {
			"transaction_id": null,
			"message_id": null,
			"last_action": null,
			"mock_type": null,
			"city_code": null,
			"bap_id": null,
			"bap_uri": null,
			"bpp_id": null,
			"bpp_uri": null,
			"start_code": null,
			"end_code": null,
			"buyer_app_fee": null,
			"vehicle_type": null,
			"fulfillments": null,
			"category_ids": null,
			"provider_id": null,
			"fulfillment_ids": null,
			"item_ids": null,
			"items": null,
			"selected_items": null,
			"selected_item_ids": null,
			"billing": null,
			"payments": null,
			"updated_payments": null,
			"order_id": null,
			"status": null,
			"error_code": null,
			"error_message": null,
			"quote": null
		}
	}
}
